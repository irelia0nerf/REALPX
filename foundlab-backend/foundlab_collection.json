{
  "info": {
    "_postman_id": "YOUR_UNIQUE_COLLECTION_ID_HERE",
    "name": "FoundLab Backend API - Complete Test Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "API Health & Version",
      "item": [
        {
          "name": "GET Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET App Version",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/version",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "version"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "DFC (Dynamic Flag Engine)",
      "item": [
        {
          "name": "POST Create Flag Definition (is_foundlab_member)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"is_foundlab_member\",\n  \"description\": \"Flag to identify if an entity is a FoundLab member (value is true if is_foundlab_registered is true).\",\n  \"type\": \"boolean\",\n  \"default_value\": false,\n  \"rules\": [{\"field\": \"is_foundlab_registered\", \"condition\": \"eq\", \"value\": true}],\n  \"weight\": 0.5,\n  \"category\": \"membership\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/flags/definitions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Create Flag Definition (high_risk_country)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"high_risk_country\",\n  \"description\": \"Flag if entity's country is in a high-risk jurisdiction for compliance.\",\n  \"type\": \"boolean\",\n  \"default_value\": false,\n  \"rules\": [{\"field\": \"country_iso\", \"condition\": \"in\", \"value\": [\"SY\", \"IR\", \"KP\", \"CU\"]}],\n  \"weight\": 0.9,\n  \"category\": \"compliance\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/flags/definitions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Create Flag Definition (large_transaction_volume)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"large_transaction_volume\",\n  \"description\": \"Flag if entity has processed high transaction volume recently (USD).\",\n  \"type\": \"numeric\",\n  \"default_value\": 0.0,\n  \"rules\": [{\"field\": \"recent_transaction_volume_usd\", \"condition\": \"gte\", \"value\": 50000.0}],\n  \"weight\": 0.7,\n  \"category\": \"financial\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/flags/definitions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Create Flag Definition (suspect_behavior_pattern)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"suspect_behavior_pattern\",\n  \"description\": \"Flag for observed suspect behavior on platform.\",\n  \"type\": \"boolean\",\n  \"default_value\": false,\n  \"rules\": [{\"field\": \"behavior_score\", \"condition\": \"gte\", \"value\": 0.8}],\n  \"weight\": 0.8,\n  \"category\": \"fraud_detection\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/flags/definitions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET All Flags Definitions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/flags/definitions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET Flag Definition by Name",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/flags/definitions/high_risk_country",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions",
                "high_risk_country"
              ]
            }
          },
          "response": []
        },
        {
          "name": "PUT Update Flag Definition",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated description: Flag if entity's country is in a HIGH-RISK jurisdiction for compliance.\",\n  \"weight\": 0.95\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/flags/definitions/high_risk_country",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions",
                "high_risk_country"
              ]
            }
          },
          "response": []
        },
        {
          "name": "DELETE Flag Definition",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/flags/definitions/large_transaction_volume",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "definitions",
                "large_transaction_volume"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Apply Dynamic Flags",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"entity_for_flag_apply_123\",\n  \"metadata\": {\n    \"is_foundlab_registered\": true,\n    \"country_iso\": \"IR\",\n    \"recent_transaction_volume_usd\": 60000.0,\n    \"behavior_score\": 0.9\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/flags/apply",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "flags",
                "apply"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "ScoreLab",
      "item": [
        {
          "name": "POST Calculate Score",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const responseJson = pm.response.json();",
                  "if (responseJson && responseJson._id) {",
                  "    pm.environment.set('score_id', responseJson._id);",
                  "    console.log('score_id saved:', responseJson._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"entity_for_score_calculation_awefga\",\n  \"flags\": [\n    {\n      \"name\": \"is_foundlab_member\",\n      \"value\": true,\n      \"weight\": 0.5,\n      \"is_active\": true\n    },\n    {\n      \"name\": \"high_risk_country\",\n      \"value\": true,\n      \"weight\": 0.9,\n      \"is_active\": true\n    },\n    {\n      \"name\": \"large_transaction_volume\",\n      \"value\": 1.0,\n      \"weight\": 0.7,\n      \"is_active\": true\n    },\n    {\n      \"name\": \"suspect_behavior_pattern\",\n      \"value\": true,\n      \"weight\": 0.8,\n      \"is_active\": true\n    },\n    {\n      \"name\": \"kyc_level_flag\",\n      \"value\": 0.8,\n      \"weight\": 0.3,\n      \"is_active\": true\n    },\n    {\n      \"name\": \"past_fraud_activity\",\n      \"value\": false,\n      \"weight\": 1.0,\n      \"is_active\": true\n    },\n    {\n      \"name\": \"inactive_flag_example\",\n      \"value\": true,\n      \"weight\": 0.1,\n      \"is_active\": false\n    }\n  ],\n  \"metadata\": {\n    \"account_age_days\": 700,\n    \"transaction_count\": 50,\n    \"wallet_status\": \"active\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/scores",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "scores"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET Score by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/scores/{{score_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "scores",
                "{{score_id}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET Scores by Entity ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/scores/entity/entity_for_score_calculation_awefga",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "scores",
                "entity",
                "entity_for_score_calculation_awefga"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sentinela (Risk Monitoring)",
      "item": [
        {
          "name": "POST Create Trigger (critical_low_score_alert)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"critical_low_score_alert\",\n  \"description\": \"Triggers if P(x) score falls below 0.2, indicating critical reputational risk.\",\n  \"trigger_type\": \"score_threshold\",\n  \"score_threshold\": 0.2,\n  \"risk_level\": \"CRITICAL\",\n  \"is_active\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Create Trigger (high_risk_country_trigger)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"high_risk_country_trigger\",\n  \"description\": \"Triggers if entity is flagged for high-risk country association.\",\n  \"trigger_type\": \"flag_presence\",\n  \"flag_name\": \"high_risk_country\",\n  \"risk_level\": \"HIGH\",\n  \"is_active\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Create Trigger (fraud_suspect_behavior)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"fraud_suspect_behavior\",\n  \"description\": \"Triggers if suspect behavior pattern flag is active.\",\n  \"trigger_type\": \"flag_presence\",\n  \"flag_name\": \"suspect_behavior_pattern\",\n  \"risk_level\": \"HIGH\",\n  \"is_active\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Create Trigger (unusual_activity_and_low_score - Custom)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"unusual_activity_and_low_score\",\n  \"description\": \"Custom logic: combines low overall score with significant transaction volume.\",\n  \"trigger_type\": \"custom_logic\",\n  \"custom_logic_params\": {\"max_score\": 0.4, \"min_recent_volume\": 75000.0},\n  \"risk_level\": \"MEDIUM\",\n  \"is_active\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET All Risk Triggers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET Risk Trigger by Name",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers/critical_low_score_alert",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers",
                "critical_low_score_alert"
              ]
            }
          },
          "response": []
        },
        {
          "name": "PUT Update Risk Trigger",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated description: Triggers if P(x) score falls below 0.15.\",\n  \"score_threshold\": 0.15,\n  \"risk_level\": \"CRITICAL\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers/critical_low_score_alert",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers",
                "critical_low_score_alert"
              ]
            }
          },
          "response": []
        },
        {
          "name": "DELETE Risk Trigger",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sentinela/triggers/unusual_activity_and_low_score",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "triggers",
                "unusual_activity_and_low_score"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Assess Risk",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"entity_for_score_calculation_awefga\",\n  \"score_id\": \"{{score_id}}\",\n  \"additional_context\": {\n    \"recent_transaction_volume_usd\": 100000.0,\n    \"number_of_transactions_today\": 5\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sentinela/assess",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sentinela",
                "assess"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "SigilMesh (NFT Metadata)",
      "item": [
        {
          "name": "POST Generate NFT Metadata",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"entity_for_score_calculation_awefga\",\n  \"score_id\": \"{{score_id}}\",\n  \"custom_name\": \"FoundLab Elite Investor Sigil\",\n  \"custom_description\": \"NFT representing a high-reputation, KYC-verified investor in the FoundLab ecosystem. This Sigil reflects strong trust.\",\n  \"image_url\": \"https://foundlab.io/custom-elite-sigil.png\",\n  \"background_color\": \"#008000\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/nft/metadata",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "nft",
                "metadata"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sherlock (Compliance & Validation)",
      "item": [
        {
          "name": "POST Validate Entity (Clean Example)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"test_clean_wallet_0x123abcef\",\n  \"entity_type\": \"wallet_address\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sherlock/validate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sherlock",
                "validate"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Validate Entity (Sanctioned Example)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"sanctioned_entity_mock_test\",\n  \"entity_type\": \"ethereum_address\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sherlock/validate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sherlock",
                "validate"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Validate Entity (PEP Example)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"pep_exposed_politician_XYZ\",\n  \"entity_type\": \"person_id\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sherlock/validate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sherlock",
                "validate"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Validate Entity (Mixer Usage Example)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entity_id\": \"mixer_usage_wallet_1\",\n  \"entity_type\": \"bitcoin_address\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/sherlock/validate",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sherlock",
                "validate"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET Validation Results by Entity ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sherlock/sanctioned_entity_mock_test",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sherlock",
                "sanctioned_entity_mock_test"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "GasMonitor",
      "item": [
        {
          "name": "POST Ingest Gas Consumption Record",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transaction_hash\": \"0xacb123def4567890abcdef1234567890abcdef1\",\n  \"entity_id\": \"user_gas_monitor_test_1\",\n  \"gas_used\": 21000,\n  \"gas_price_gwei\": 25,\n  \"block_number\": 17000000,\n  \"timestamp\": \"2023-10-26T10:30:00Z\",\n  \"chain_id\": 1,\n  \"transaction_type\": \"ERC20_Transfer\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/gasmonitor/ingest",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "gasmonitor",
                "ingest"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Ingest Another Gas Consumption Record (for anomaly check)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transaction_hash\": \"0xacb123def4567890abcdef1234567890abcdef2\",\n  \"entity_id\": \"user_gas_monitor_test_1\",\n  \"gas_used\": 5000000,\n  \"gas_price_gwei\": 30,\n  \"block_number\": 17000001,\n  \"timestamp\": \"2023-10-26T10:45:00Z\",\n  \"chain_id\": 1,\n  \"transaction_type\": \"Complex_DeFi_Interaction\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/gasmonitor/ingest",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "gasmonitor",
                "ingest"
              ]
            }
          },
          "response": []
        },
        {
          "name": "GET Gas Records by Entity",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/gasmonitor/records/user_gas_monitor_test_1?limit=2",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "gasmonitor",
                "records",
                "user_gas_monitor_test_1"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Analyze Gas Patterns for Entity",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lookBackDays\": 7\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/gasmonitor/analyze/user_gas_monitor_test_1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "gasmonitor",
                "analyze",
                "user_gas_monitor_test_1"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "CryptoPix Analyzer",
      "item": [
        {
          "name": "POST Analyze Crypto-to-Pix Transaction (Clean)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transaction_id\": \"example_txn_001\",\n  \"crypto_details\": {\n    \"transaction_hash\": \"0xabc123\",\n    \"blockchain\": \"Ethereum\",\n    \"from_address\": \"test_clean_wallet_0x123abcef\",\n    \"to_address\": \"0xExchangeAddress\",\n    \"asset_ticker\": \"ETH\",\n    \"amount_crypto\": 0.5,\n    \"timestamp\": \"2024-01-01T10:00:00Z\"\n  },\n  \"pix_details\": {\n    \"pix_key\": \"12345678900\",\n    \"pix_key_type\": \"CPF\",\n    \"receiver_name\": \"Joao da Silva\",\n    \"receiver_document\": \"12345678900\",\n    \"bank_name\": \"Banco Inter\",\n    \"bank_ispb\": \"12345678\",\n    \"amount_fiat\": 5000.0\n  },\n  \"user_id\": \"user_123\",\n  \"ip_address\": \"192.168.1.1\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/cryptopix/analyze",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cryptopix",
                "analyze"
              ]
            }
          },
          "response": []
        },
        {
          "name": "POST Analyze Crypto-to-Pix Transaction (High Risk)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transaction_id\": \"example_txn_002\",\n  \"crypto_details\": {\n    \"transaction_hash\": \"0xdef456\",\n    \"blockchain\": \"Ethereum\",\n    \"from_address\": \"sanctioned_entity_mock_test\",\n    \"to_address\": \"0xReceiverExchangeAddress\",\n    \"asset_ticker\": \"USDT\",\n    \"amount_crypto\": 5000.0,\n    \"timestamp\": \"2024-01-01T11:00:00Z\"\n  },\n  \"pix_details\": {\n    \"pix_key\": \"09876543211\",\n    \"pix_key_type\": \"CPF\",\n    \"receiver_name\": \"Maria de Souza\",\n    \"receiver_document\": \"09876543211\",\n    \"bank_name\": \"Banco do Brasil\",\n    \"bank_ispb\": \"87654321\",\n    \"amount_fiat\": 15000.0\n  },\n  \"user_id\": \"user_456\",\n  \"ip_address\": \"203.0.113.5\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/cryptopix/analyze",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cryptopix",
                "analyze"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Automatically captures _id from /scores POST request and sets it as environment variable 'score_id'",
          "const responseJson = pm.response.json();",
          "if (responseJson && responseJson._id && pm.request.url.path.includes('/scores') && pm.request.method === 'POST') {",
          "    pm.environment.set('score_id', responseJson._id);",
          "    console.log('Postman variable updated: score_id = ' + responseJson._id);",
          "} else if (responseJson && responseJson.entity_id && pm.request.url.path.includes('/sherlock/validate') && pm.request.method === 'POST') {",
          "    // Example for Sherlock, if you need to pass entity_id around",
          "    // pm.environment.set('sherlock_entity_id', responseJson.entity_id);",
          "    // console.log('Postman variable updated: sherlock_entity_id = ' + responseJson.entity_id);",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000",
      "type": "string",
      "description": "Base URL for the API. Change to your Cloud Run URL after deployment."
    },
    {
      "key": "score_id",
      "value": "",
      "type": "string",
      "description": "Automatically set after a successful /scores POST request. Used for Sentinela and SigilMesh."
    }
  ]
}
